//подключение шрифта
@mixin font($font_name, $file_name, $weight, $style) {

    @font-face {
    font-family: $font_name;
    font-display: swap;
    src: url("../fonts/#{$file_name}.woff") format("woff"), url("../fonts/#{$file_name}.woff2") format("woff2");
    font-weight: #{$weight};
    font-style: #{$style};
    }
}

//адаптивное свойство
$maxWidth : 3540;//1920
// $maxWidthContainer : ;//1170

@mixin adaptive-value($property, $startSize, $minSize, $type) {
    $addSize : $startSize - $minSize;
    @if $type==1 {
        //только если меньше контейнера
        #{$property}: $startSize + px;
        @media screen and (max-width : #{maxWidthContainer + px}) {
            #{$property} : calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}))
        }
    }
    @else if $type==2 {
        //только если больше контейнера
        #{$property}: $startSize + px;
        @media screen and (min-width : #{maxWidthContainer + px}) {
            #{$property} : calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}))
        }
    }
    @else {
        //всегда
        #{$property} : calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}))
    }
}
/*
.example {
    @include adaptive-value("padding", 50, 20, 0);
}
*/




/* px TO % */
@function prc($pxItemWidth, $pxContainerWidth) {
    $result : math.div($pxItemWidth, $pxContainerWidth) * 100%;
    @return $result
};
/* px TO rem */
//вводить голые значения (без px в конце)
@function rem($px) {
    $result : math.div($px, 16) + rem;
    @return $result
};
/* px TO em */
@function em($px) {
    $result : math.div($px, 16) + em;
    @return $result
};
/* 
    .exampe {
        font-size: rem(42);
    }
*/